# fun __ctype_get_mb_cur_max() : 
fun atof(UInt8*) : Float64
fun atoi(UInt8*) : Int32
# fun atol(UInt8*) : 
# fun atoll(UInt8*) : 
fun strtod(UInt8*, UInt8**) : Float64
fun strtof(UInt8*, UInt8**) : Float32
# fun strtold(UInt8*, UInt8**) : 
# fun strtol(UInt8*, UInt8**, Int32) : 
# fun strtoul(UInt8*, UInt8**, Int32) : 
# fun strtoq(UInt8*, UInt8**, Int32) : 
# fun strtouq(UInt8*, UInt8**, Int32) : 
# fun strtoll(UInt8*, UInt8**, Int32) : 
# fun strtoull(UInt8*, UInt8**, Int32) : 
# fun l64a() : UInt8*
# fun a64l(UInt8*) : 
# fun __bswap_16() : 
# fun __bswap_32() : 
# fun __bswap_64() : 
# fun __uint16_identity() : 
# fun __uint32_identity() : 
# fun __uint64_identity() : 
# fun select(Int32, *, *, *, *) : Int32
# fun pselect(Int32, *, *, *, *, *) : Int32
# fun random() : 
fun srandom(UInt32) : Void
# fun initstate(UInt32, UInt8*, ) : UInt8*
fun setstate(UInt8*) : UInt8*
# fun random_r(*, *) : Int32
# fun srandom_r(UInt32, *) : Int32
# fun initstate_r(UInt32, UInt8*, , *) : Int32
# fun setstate_r(UInt8*, *) : Int32
fun rand() : Int32
fun srand(UInt32) : Void
fun rand_r(UInt32*) : Int32
fun drand48() : Float64
# fun erand48() : Float64
# fun lrand48() : 
# fun nrand48() : 
# fun mrand48() : 
# fun jrand48() : 
# fun srand48() : Void
# fun seed48() : LibC::UShort*
# fun lcong48() : Void
# fun drand48_r(*, Float64*) : Int32
# fun erand48_r(, *, Float64*) : Int32
# fun lrand48_r(*, *) : Int32
# fun nrand48_r(, *, *) : Int32
# fun mrand48_r(*, *) : Int32
# fun jrand48_r(, *, *) : Int32
# fun srand48_r(, *) : Int32
# fun seed48_r(, *) : Int32
# fun lcong48_r(, *) : Int32
# fun malloc() : Void*
# fun calloc(, ) : Void*
# fun realloc(Void*, ) : Void*
# fun reallocarray(Void*, , ) : Void*
fun free(Void*) : Void
# fun alloca() : Void*
# fun valloc() : Void*
# fun posix_memalign(Void**, , ) : Int32
# fun aligned_alloc(, ) : Void*
fun abort() : Void
# fun atexit() : Int32
# fun at_quick_exit() : Int32
# fun on_exit(, Void*) : Int32
fun exit(Int32) : Void
fun quick_exit(Int32) : Void
fun _Exit(Int32) : Void
fun getenv(UInt8*) : UInt8*
fun putenv(UInt8*) : Int32
fun setenv(UInt8*, UInt8*, Int32) : Int32
fun unsetenv(UInt8*) : Int32
fun clearenv() : Int32
fun mktemp(UInt8*) : UInt8*
fun mkstemp(UInt8*) : Int32
fun mkstemps(UInt8*, Int32) : Int32
fun mkdtemp(UInt8*) : UInt8*
fun system(UInt8*) : Int32
fun realpath(UInt8*, UInt8*) : UInt8*
# fun bsearch(Void*, Void*, , , ) : Void*
# fun qsort(Void*, , , ) : Void
fun abs(Int32) : Int32
# fun labs() : 
# fun llabs() : 
# fun div(Int32, Int32) : 
# fun ldiv(, ) : 
# fun lldiv(, ) : 
fun ecvt(Float64, Int32, Int32*, Int32*) : UInt8*
fun fcvt(Float64, Int32, Int32*, Int32*) : UInt8*
fun gcvt(Float64, Int32, UInt8*) : UInt8*
# fun qecvt(, Int32, Int32*, Int32*) : UInt8*
# fun qfcvt(, Int32, Int32*, Int32*) : UInt8*
# fun qgcvt(, Int32, UInt8*) : UInt8*
# fun ecvt_r(Float64, Int32, Int32*, Int32*, UInt8*, ) : Int32
# fun fcvt_r(Float64, Int32, Int32*, Int32*, UInt8*, ) : Int32
# fun qecvt_r(, Int32, Int32*, Int32*, UInt8*, ) : Int32
# fun qfcvt_r(, Int32, Int32*, Int32*, UInt8*, ) : Int32
# fun mblen(UInt8*, ) : Int32
# fun mbtowc(*, UInt8*, ) : Int32
# fun wctomb(UInt8*, ) : Int32
# fun mbstowcs(*, UInt8*, ) : 
# fun wcstombs(UInt8*, *, ) : 
fun rpmatch(UInt8*) : Int32
fun getsubopt(UInt8**, UInt8**, UInt8**) : Int32
fun getloadavg(Float64*, Int32) : Int32
fun grm_args_new() : GRMArgs*
fun grm_args_delete(GRMArgs*) : Void
fun grm_args_push(GRMArgs*, UInt8*, UInt8*) : Int32
fun grm_args_push_buf(GRMArgs*, UInt8*, UInt8*, Void*, Int32) : Int32
fun grm_args_contains(GRMArgs*, UInt8*) : Int32
fun grm_args_clear(GRMArgs*) : Void
fun grm_args_remove(GRMArgs*, UInt8*) : Void
# fun grm_length(Float64, UInt8*) : 
fun remove(UInt8*) : Int32
fun rename(UInt8*, UInt8*) : Int32
fun renameat(Int32, UInt8*, Int32, UInt8*) : Int32
# fun tmpfile() : *
fun tmpnam(UInt8*) : UInt8*
fun tmpnam_r(UInt8*) : UInt8*
fun tempnam(UInt8*, UInt8*) : UInt8*
# fun fclose(*) : Int32
# fun fflush(*) : Int32
# fun fflush_unlocked(*) : Int32
# fun fopen(UInt8*, UInt8*) : *
# fun freopen(UInt8*, UInt8*, *) : *
# fun fdopen(Int32, UInt8*) : *
# fun fmemopen(Void*, , UInt8*) : *
# fun open_memstream(UInt8**, *) : *
# fun setbuf(*, UInt8*) : Void
# fun setvbuf(*, UInt8*, Int32, ) : Int32
# fun setbuffer(*, UInt8*, ) : Void
# fun setlinebuf(*) : Void
# fun fprintf(*, UInt8*) : Int32
fun printf(UInt8*) : Int32
fun sprintf(UInt8*, UInt8*) : Int32
# fun vfprintf(*, UInt8*, ) : Int32
# fun vprintf(UInt8*, ) : Int32
# fun vsprintf(UInt8*, UInt8*, ) : Int32
# fun snprintf(UInt8*, , UInt8*) : Int32
# fun vsnprintf(UInt8*, , UInt8*, ) : Int32
# fun vdprintf(Int32, UInt8*, ) : Int32
fun dprintf(Int32, UInt8*) : Int32
# fun fscanf(*, UInt8*) : Int32
fun scanf(UInt8*) : Int32
fun sscanf(UInt8*, UInt8*) : Int32
# fun __isoc99_fscanf(*, UInt8*) : Int32
fun __isoc99_scanf(UInt8*) : Int32
fun __isoc99_sscanf(UInt8*, UInt8*) : Int32
# fun vfscanf(*, UInt8*, ) : Int32
# fun vscanf(UInt8*, ) : Int32
# fun vsscanf(UInt8*, UInt8*, ) : Int32
# fun __isoc99_vfscanf(*, UInt8*, ) : Int32
# fun __isoc99_vscanf(UInt8*, ) : Int32
# fun __isoc99_vsscanf(UInt8*, UInt8*, ) : Int32
# fun fgetc(*) : Int32
# fun getc(*) : Int32
fun getchar() : Int32
# fun getc_unlocked(*) : Int32
fun getchar_unlocked() : Int32
# fun fgetc_unlocked(*) : Int32
# fun fputc(Int32, *) : Int32
# fun putc(Int32, *) : Int32
fun putchar(Int32) : Int32
# fun fputc_unlocked(Int32, *) : Int32
# fun putc_unlocked(Int32, *) : Int32
fun putchar_unlocked(Int32) : Int32
# fun getw(*) : Int32
# fun putw(Int32, *) : Int32
# fun fgets(UInt8*, Int32, *) : UInt8*
# fun __getdelim(UInt8**, *, Int32, *) : 
# fun getdelim(UInt8**, *, Int32, *) : 
# fun getline(UInt8**, *, *) : 
# fun fputs(UInt8*, *) : Int32
fun puts(UInt8*) : Int32
# fun ungetc(Int32, *) : Int32
# fun fread(Void*, , , *) : 
# fun fwrite(Void*, , , *) : 
# fun fread_unlocked(Void*, , , *) : 
# fun fwrite_unlocked(Void*, , , *) : 
# fun fseek(*, , Int32) : Int32
# fun ftell(*) : 
# fun rewind(*) : Void
# fun fseeko(*, , Int32) : Int32
# fun ftello(*) : 
# fun fgetpos(*, *) : Int32
# fun fsetpos(*, *) : Int32
# fun clearerr(*) : Void
# fun feof(*) : Int32
# fun ferror(*) : Int32
# fun clearerr_unlocked(*) : Void
# fun feof_unlocked(*) : Int32
# fun ferror_unlocked(*) : Int32
fun perror(UInt8*) : Void
# fun fileno(*) : Int32
# fun fileno_unlocked(*) : Int32
# fun popen(UInt8*, UInt8*) : *
# fun pclose(*) : Int32
fun ctermid(UInt8*) : UInt8*
# fun flockfile(*) : Void
# fun ftrylockfile(*) : Int32
# fun funlockfile(*) : Void
# fun __uflow(*) : Int32
# fun __overflow(*, Int32) : Int32
# fun grm_dump(GRMArgs*, *) : Void
# fun grm_dump_json(GRMArgs*, *) : Void
fun grm_dump_json_str() : UInt8*
# fun grm_register(, ) : Int32
# fun grm_unregister() : Int32
fun grm_input(GRMArgs*) : Int32
fun grm_get_box(Int32, Int32, Int32, Int32, Int32, Int32*, Int32*, Int32*, Int32*) : Int32
# fun grm_get_tooltip(Int32, Int32) : *
# fun grm_open(Int32, UInt8*, UInt32, , ) : Void*
fun grm_recv(Void*, GRMArgs*) : GRMArgs*
fun grm_send(Void*, UInt8*) : Int32
fun grm_send_buf(Void*, UInt8*, Void*, Int32) : Int32
fun grm_send_ref(Void*, UInt8*, UInt8, Void*, Int32) : Int32
fun grm_send_args(Void*, GRMArgs*) : Int32
fun grm_close(Void*) : Void
fun grm_finalize() : Void
fun grm_clear() : Int32
fun grm_max_plotid() : UInt32
fun grm_merge(GRMArgs*) : Int32
fun grm_merge_extended(GRMArgs*, Int32, UInt8*) : Int32
fun grm_merge_hold(GRMArgs*) : Int32
fun grm_merge_named(GRMArgs*, UInt8*) : Int32
fun grm_plot(GRMArgs*) : Int32
fun grm_switch(UInt32) : Int32

# Unknown types
# ["size_t", ":long", ":long-long", ":long-double", ":unsigned-long", ":unsigned-long-long", "__uint16_t", "__uint32_t", "__uint64_t", "fd_set", ":struct", "__sigset_t", "int32_t", ":array", ":function-pointer", "__compar_fn_t", "div_t", "ldiv_t", "lldiv_t", "wchar_t", "grm_args_ptr_t", "FILE", "__gnuc_va_list", "__ssize_t", "__off_t", "fpos_t", "grm_event_type_t", "grm_event_callback_t", "grm_tooltip_info_t"]
# __ctype_get_mb_cur_max, size_t
# atol, :long
# atoll, :long-long
# strtold, :long-double
# strtol, :long
# strtoul, :unsigned-long
# strtoq, :long-long
# strtouq, :unsigned-long-long
# strtoll, :long-long
# strtoull, :unsigned-long-long
# l64a, :long
# a64l, :long
# __bswap_16, __uint16_t
# __bswap_16, __uint16_t
# __bswap_32, __uint32_t
# __bswap_32, __uint32_t
# __bswap_64, __uint64_t
# __bswap_64, __uint64_t
# __uint16_identity, __uint16_t
# __uint16_identity, __uint16_t
# __uint32_identity, __uint32_t
# __uint32_identity, __uint32_t
# __uint64_identity, __uint64_t
# __uint64_identity, __uint64_t
# select, fd_set
# select, fd_set
# select, fd_set
# select, :struct
# pselect, fd_set
# pselect, fd_set
# pselect, fd_set
# pselect, :struct
# pselect, __sigset_t
# random, :long
# initstate, size_t
# random_r, :struct
# random_r, int32_t
# srandom_r, :struct
# initstate_r, size_t
# initstate_r, :struct
# setstate_r, :struct
# erand48, :array
# lrand48, :long
# nrand48, :array
# nrand48, :long
# mrand48, :long
# jrand48, :array
# jrand48, :long
# srand48, :long
# seed48, :array
# lcong48, :array
# drand48_r, :struct
# erand48_r, :array
# erand48_r, :struct
# lrand48_r, :struct
# lrand48_r, :long
# nrand48_r, :array
# nrand48_r, :struct
# nrand48_r, :long
# mrand48_r, :struct
# mrand48_r, :long
# jrand48_r, :array
# jrand48_r, :struct
# jrand48_r, :long
# srand48_r, :long
# srand48_r, :struct
# seed48_r, :array
# seed48_r, :struct
# lcong48_r, :array
# lcong48_r, :struct
# malloc, size_t
# calloc, size_t
# calloc, size_t
# realloc, size_t
# reallocarray, size_t
# reallocarray, size_t
# alloca, size_t
# valloc, size_t
# posix_memalign, size_t
# posix_memalign, size_t
# aligned_alloc, size_t
# aligned_alloc, size_t
# atexit, :function-pointer
# at_quick_exit, :function-pointer
# on_exit, :function-pointer
# bsearch, size_t
# bsearch, size_t
# bsearch, __compar_fn_t
# qsort, size_t
# qsort, size_t
# qsort, __compar_fn_t
# labs, :long
# labs, :long
# llabs, :long-long
# llabs, :long-long
# div, div_t
# ldiv, :long
# ldiv, :long
# ldiv, ldiv_t
# lldiv, :long-long
# lldiv, :long-long
# lldiv, lldiv_t
# qecvt, :long-double
# qfcvt, :long-double
# qgcvt, :long-double
# ecvt_r, size_t
# fcvt_r, size_t
# qecvt_r, :long-double
# qecvt_r, size_t
# qfcvt_r, :long-double
# qfcvt_r, size_t
# mblen, size_t
# mbtowc, wchar_t
# mbtowc, size_t
# wctomb, wchar_t
# mbstowcs, wchar_t
# mbstowcs, size_t
# mbstowcs, size_t
# wcstombs, wchar_t
# wcstombs, size_t
# wcstombs, size_t
# grm_length, grm_args_ptr_t
# tmpfile, FILE
# fclose, FILE
# fflush, FILE
# fflush_unlocked, FILE
# fopen, FILE
# freopen, FILE
# freopen, FILE
# fdopen, FILE
# fmemopen, size_t
# fmemopen, FILE
# open_memstream, size_t
# open_memstream, FILE
# setbuf, FILE
# setvbuf, FILE
# setvbuf, size_t
# setbuffer, FILE
# setbuffer, size_t
# setlinebuf, FILE
# fprintf, FILE
# vfprintf, FILE
# vfprintf, __gnuc_va_list
# vprintf, __gnuc_va_list
# vsprintf, __gnuc_va_list
# snprintf, size_t
# vsnprintf, size_t
# vsnprintf, __gnuc_va_list
# vdprintf, __gnuc_va_list
# fscanf, FILE
# __isoc99_fscanf, FILE
# vfscanf, FILE
# vfscanf, __gnuc_va_list
# vscanf, __gnuc_va_list
# vsscanf, __gnuc_va_list
# __isoc99_vfscanf, FILE
# __isoc99_vfscanf, __gnuc_va_list
# __isoc99_vscanf, __gnuc_va_list
# __isoc99_vsscanf, __gnuc_va_list
# fgetc, FILE
# getc, FILE
# getc_unlocked, FILE
# fgetc_unlocked, FILE
# fputc, FILE
# putc, FILE
# fputc_unlocked, FILE
# putc_unlocked, FILE
# getw, FILE
# putw, FILE
# fgets, FILE
# __getdelim, size_t
# __getdelim, FILE
# __getdelim, __ssize_t
# getdelim, size_t
# getdelim, FILE
# getdelim, __ssize_t
# getline, size_t
# getline, FILE
# getline, __ssize_t
# fputs, FILE
# ungetc, FILE
# fread, size_t
# fread, size_t
# fread, FILE
# fread, :unsigned-long
# fwrite, size_t
# fwrite, size_t
# fwrite, FILE
# fwrite, :unsigned-long
# fread_unlocked, size_t
# fread_unlocked, size_t
# fread_unlocked, FILE
# fread_unlocked, size_t
# fwrite_unlocked, size_t
# fwrite_unlocked, size_t
# fwrite_unlocked, FILE
# fwrite_unlocked, size_t
# fseek, FILE
# fseek, :long
# ftell, FILE
# ftell, :long
# rewind, FILE
# fseeko, FILE
# fseeko, __off_t
# ftello, FILE
# ftello, __off_t
# fgetpos, FILE
# fgetpos, fpos_t
# fsetpos, FILE
# fsetpos, fpos_t
# clearerr, FILE
# feof, FILE
# ferror, FILE
# clearerr_unlocked, FILE
# feof_unlocked, FILE
# ferror_unlocked, FILE
# fileno, FILE
# fileno_unlocked, FILE
# popen, FILE
# pclose, FILE
# flockfile, FILE
# ftrylockfile, FILE
# funlockfile, FILE
# __uflow, FILE
# __overflow, FILE
# grm_dump, FILE
# grm_dump_json, FILE
# grm_register, grm_event_type_t
# grm_register, grm_event_callback_t
# grm_unregister, grm_event_type_t
# grm_get_tooltip, grm_tooltip_info_t
# grm_open, :function-pointer
# grm_open, :function-pointer
